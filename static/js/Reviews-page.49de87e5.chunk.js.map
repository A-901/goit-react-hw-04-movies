{"version":3,"sources":["components/pages/Reviews.js","services/api.js"],"names":["Reviews","state","reviews","error","match","this","props","API","params","movieId","then","res","setState","data","results","catch","err","message","length","map","review","key","id","author","content","Component","BASE_URL","API_KEY","imageURLBaseWidth200","imageURLBaseWidth300","fetchMostPopularMovies","axios","get","fetchMovieByQuery","query","fetchDetailsAboutMovie","fetchMovieCast","fetchMovieReviews"],"mappings":"8JAIMA,E,4MASJC,MAAQ,CACNC,QAAS,GACTC,MAAO,M,kEAGY,IAAD,OACVC,EAAUC,KAAKC,MAAfF,MAERG,IAAsBH,EAAMI,OAAOC,SAChCC,MAAK,SAACC,GAAD,OAAS,EAAKC,SAAS,CAAEV,QAASS,EAAIE,KAAKC,aAChDC,OAAM,SAACC,GAAD,OACL,EAAKJ,SAAS,CACZT,MAAOa,EAAIC,e,+BAKT,IAAD,EACoBZ,KAAKJ,MAAxBC,EADD,EACCA,QAASC,EADV,EACUA,MAEjB,OACE,6BACGA,GAAS,uDACTD,EAAQgB,OAAS,EAChB,4BACGhB,EAAQiB,KAAI,SAACC,GAAD,OACX,wBAAIC,IAAKD,EAAOE,IACd,6CAAeF,EAAOG,SACtB,2BAAIH,EAAOI,cAKjB,6E,GA1CYC,aAiDPzB,a,gCCrDf,mQAEM0B,EAAW,+BACXC,EAAU,mCAEHC,EAAuB,kCACvBC,EAAuB,kCAEvBC,EAAyB,WACpC,OAAOC,IAAMC,IAAN,UAAaN,EAAb,uCAAoDC,KAGhDM,EAAoB,SAACC,GAChC,OAAOH,IAAMC,IAAN,UACFN,EADE,iCAC+BC,EAD/B,kBACgDO,KAI5CC,EAAyB,SAACb,GACrC,OAAOS,IAAMC,IAAN,UAAaN,EAAb,kBAA+BJ,EAA/B,oBAA6CK,KAGzCS,EAAiB,SAACd,GAC7B,OAAOS,IAAMC,IAAN,UAAaN,EAAb,kBAA+BJ,EAA/B,4BAAqDK,KAGjDU,EAAoB,SAACf,GAChC,OAAOS,IAAMC,IAAN,UAAaN,EAAb,kBAA+BJ,EAA/B,4BAAqDK","file":"static/js/Reviews-page.49de87e5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport * as API from \"../../services/api\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Reviews extends Component {\r\n  static propTypes = {\r\n    match: PropTypes.shape({\r\n      params: PropTypes.shape({\r\n        movieId: PropTypes.string,\r\n      }),\r\n    }).isRequired,\r\n  };\r\n\r\n  state = {\r\n    reviews: [],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { match } = this.props;\r\n\r\n    API.fetchMovieReviews(match.params.movieId)\r\n      .then((res) => this.setState({ reviews: res.data.results }))\r\n      .catch((err) =>\r\n        this.setState({\r\n          error: err.message,\r\n        })\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const { reviews, error } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {error && <h2>Today is not a good day</h2>}\r\n        {reviews.length > 0 ? (\r\n          <ul>\r\n            {reviews.map((review) => (\r\n              <li key={review.id}>\r\n                <p>{`Author: ${review.author}`}</p>\r\n                <p>{review.content}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>We do not have any reviews for this movie</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Reviews;","import axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst API_KEY = \"4c723f08ea7a4a76125776c3387f72cf\";\r\n\r\nexport const imageURLBaseWidth200 = \"https://image.tmdb.org/t/p/w200\";\r\nexport const imageURLBaseWidth300 = \"https://image.tmdb.org/t/p/w300\";\r\n\r\nexport const fetchMostPopularMovies = () => {\r\n  return axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\r\n};\r\n\r\nexport const fetchMovieByQuery = (query) => {\r\n  return axios.get(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\r\n  );\r\n};\r\n\r\nexport const fetchDetailsAboutMovie = (id) => {\r\n  return axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\r\n};\r\n\r\nexport const fetchMovieCast = (id) => {\r\n  return axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\r\n};\r\n\r\nexport const fetchMovieReviews = (id) => {\r\n  return axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\r\n};"],"sourceRoot":""}