{"version":3,"sources":["components/InfoBox/infobox.js","components/pages/MovieDetailsPage.js","services/api.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"names":["InfoBox","movieId","location","to","pathname","state","from","replace","MovieDetailsPage","movieDetails","error","onGoBack","props","history","goBack","push","routes","MOVIES_PAGE","path","match","this","API","params","then","res","setState","data","catch","err","message","type","onClick","original_title","vote_average","overview","genres","length","map","genre","key","id","name","src","poster_path","alt","fallback","CAST_PAGE","component","REVIEWS_PAGE","Component","BASE_URL","API_KEY","imageURLBaseWidth200","imageURLBaseWidth300","fetchMostPopularMovies","axios","get","fetchMovieByQuery","query","fetchDetailsAboutMovie","fetchMovieCast","fetchMovieReviews","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"mappings":"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","file":"static/js/MovieDetailsPage-page.5adb8c38.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst InfoBox = ({ movieId, location }) => (\r\n  <div>\r\n    <Link\r\n      to={{\r\n        pathname: `/movies/${movieId}/cast`,\r\n        state: { from: { ...location } },\r\n      }}\r\n      replace\r\n    >\r\n      Cast\r\n    </Link>\r\n    <br />\r\n    <Link\r\n      to={{\r\n        pathname: `/movies/${movieId}/reviews`,\r\n        state: { from: { ...location } },\r\n      }}\r\n      replace\r\n    >\r\n      Reviews\r\n    </Link>\r\n  </div>\r\n);\r\n\r\nInfoBox.propTypes = {\r\n  movieId: PropTypes.string.isRequired,\r\n  location: PropTypes.shape({\r\n    state: PropTypes.shape({\r\n      from: PropTypes.shape({}),\r\n    }),\r\n  }).isRequired,\r\n};\r\n\r\nexport default InfoBox;","import React, { Component, Suspense } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport * as API from \"../../services/api\";\r\nimport PropTypes from \"prop-types\";\r\nimport routes from \"../../routes/routes\";\r\nimport Information from \"../InfoBox/infobox\";\r\n\r\nclass MovieDetailsPage extends Component {\r\n  static propTypes = {\r\n    match: PropTypes.shape({\r\n      params: PropTypes.shape({\r\n        movieId: PropTypes.string,\r\n      }),\r\n    }).isRequired,\r\n    history: PropTypes.shape({\r\n      goBack: PropTypes.func,\r\n      push: PropTypes.func,\r\n    }).isRequired,\r\n    location: PropTypes.shape({\r\n      state: PropTypes.shape({\r\n        from: PropTypes.shape({}),\r\n      }),\r\n    }).isRequired,\r\n  };\r\n\r\n  state = {\r\n    movieDetails: null,\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { match } = this.props;\r\n    API.fetchDetailsAboutMovie(match.params.movieId)\r\n      .then((res) => this.setState({ movieDetails: res.data }))\r\n      .catch((err) =>\r\n        this.setState({\r\n          error: err.message,\r\n        })\r\n      );\r\n  }\r\n\r\n  onGoBack = () => {\r\n    const { history, location } = this.props;\r\n\r\n    if (location.state) {\r\n      history.goBack();\r\n      return;\r\n    }\r\n\r\n    history.push(routes.MOVIES_PAGE.path);\r\n  };\r\n\r\n  render() {\r\n    const { match, location } = this.props;\r\n    const { movieDetails, error } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {error && <h2>Today is not a good day</h2>}\r\n        {movieDetails && (\r\n          <>\r\n            <button type=\"button\" onClick={this.onGoBack}>\r\n              Go back\r\n            </button>\r\n            <h2>{movieDetails.original_title}</h2>\r\n            <p>{`User score: ${movieDetails.vote_average}`}</p>\r\n            <h3>Overview</h3>\r\n            <p>{movieDetails.overview}</p>\r\n            <h4>Genres</h4>\r\n            {movieDetails.genres.length > 0 && (\r\n              <ul>\r\n                {movieDetails.genres.map((genre) => (\r\n                  <li key={genre.id}>{genre.name}</li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n            <img\r\n              src={`${API.imageURLBaseWidth300}${movieDetails.poster_path}`}\r\n              alt={movieDetails.original_title}\r\n            />\r\n            <Information movieId={match.params.movieId} location={location} />\r\n            <Suspense fallback={<h2>Loading...</h2>}>\r\n              <Switch>\r\n                <Route\r\n                  path={routes.CAST_PAGE.path}\r\n                  component={routes.CAST_PAGE.component}\r\n                />\r\n                <Route\r\n                  path={routes.REVIEWS_PAGE.path}\r\n                  component={routes.REVIEWS_PAGE.component}\r\n                />\r\n              </Switch>\r\n            </Suspense>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default MovieDetailsPage;","import axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst API_KEY = \"4c723f08ea7a4a76125776c3387f72cf\";\r\n\r\nexport const imageURLBaseWidth200 = \"https://image.tmdb.org/t/p/w200\";\r\nexport const imageURLBaseWidth300 = \"https://image.tmdb.org/t/p/w300\";\r\n\r\nexport const fetchMostPopularMovies = () => {\r\n  return axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\r\n};\r\n\r\nexport const fetchMovieByQuery = (query) => {\r\n  return axios.get(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\r\n  );\r\n};\r\n\r\nexport const fetchDetailsAboutMovie = (id) => {\r\n  return axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\r\n};\r\n\r\nexport const fetchMovieCast = (id) => {\r\n  return axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\r\n};\r\n\r\nexport const fetchMovieReviews = (id) => {\r\n  return axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\r\n};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}"],"sourceRoot":""}